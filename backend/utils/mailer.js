import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
dotenv.config();


// T·∫°o transporter v·ªõi error handling
const createTransporter = () => {
  try {
    return nodemailer.createTransport({
      host: process.env.MAIL_HOST,
      port: parseInt(process.env.MAIL_PORT),
      secure: process.env.MAIL_SECURE === 'true',
      auth: {
        user: process.env.MAIL_USER,
        pass: process.env.MAIL_PASS,
      },
      // Th√™m timeout v√† retry options
      connectionTimeout: 10000,
      greetingTimeout: 5000,
      socketTimeout: 10000,
    });
  } catch (error) {
    console.error('Error creating email transporter:', error);
    throw new Error('Email service configuration error');
  }
};
//H√†m g·ª≠i link verify Email
export const sendVerificationLink = async (to, token, userName = null) => {
    try {
        const transporter = createTransporter();
        console.log('Transporter verified:', await transporter.verify());
        const verificationUrl = `${process.env.FRONTEND_URL}/verify-email?token=${token}`;
        console.log('Verification URL:', verificationUrl);
        const mailOptions = {
          from: `"VieVerse Support" <${process.env.MAIL_USER}>`,
          to,
          subject: 'üîó X√°c minh email VieVerse',
          html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>X√°c minh email VieVerse</title>
            <style>
              body {
          font-family: Arial, sans-serif;
          background-color: #f4f4f4;
          padding: 40px;
          margin: 0;
        }
        .container {
          max-width: 600px;
          margin: 0 auto;
          background-color: #ffffff;
          padding: 30px;
          border-radius: 10px;
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
          text-align: center;
        }
        .logo {
          font-size: 28px;
          color: #07e32b;
          font-weight: bold;
          margin-bottom: 20px;
        }
        .button {
          display: inline-block;
          background-color: #2563eb;
          color: #ffffff;
          padding: 14px 32px;
          text-decoration: none;
          border-radius: 6px;
          font-size: 16px;
          margin: 24px 0;
        }
        .footer {
          font-size: 14px;
          color: #888888;
          margin-top: 20px;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="logo">VieVerse</div>
        <h2>X√°c minh email c·ªßa b·∫°n</h2>
        <p>Ch√†o ${userName || 'b·∫°n'},</p>
        <p>Vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c minh ƒë·ªãa ch·ªâ email c·ªßa b·∫°n:</p>
        <a href="${verificationUrl}" class="button">X√°c minh email</a>
        <p>Li√™n k·∫øt s·∫Ω h·∫øt h·∫°n trong v√≤ng 24 gi·ªù.</p>
        <p class="footer">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y.</p>
      </div>
    </body>
    </html>
  `,
  text: `
    X√°c minh email VieVerse

    Ch√†o ${userName || 'b·∫°n'},

    Vui l√≤ng nh·∫•p v√†o li√™n k·∫øt sau ƒë·ªÉ x√°c minh email c·ªßa b·∫°n:
    ${verificationUrl}

    Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n trong 24 gi·ªù.

    Tr√¢n tr·ªçng,
    ƒê·ªôi ng≈© VieVerse
  `
};

        const info = await transporter.sendMail(mailOptions);
        console.log('Verification email sent:', info.messageId);
        return { success: true, messageId: info.messageId };
    } catch (error) {
        console.error('Error sending verification email:', error.message, error.stack);
        throw new Error('Failed to send verification email.' + error.message);
    }
};

// Template email OTP 
const getOTPEmailTemplate = (otp, userName = 'B·∫°n') => {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>X√°c minh t√†i kho·∫£n VieVerse</title>
    </head>
    <body style="font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 20px;">
      <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        
        <!-- Header -->
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #07e32b; margin: 0; font-size: 28px;">VieVerse</h1>
          <p style="color: #64748b; margin: 5px 0 0 0;">N·ªÅn t·∫£ng k·∫øt n·ªëi sinh vi√™n</p>
        </div>
        
        <!-- Main Content -->
        <div style="text-align: center; margin-bottom: 30px;">
          <h2 style="color: #1e293b; margin-bottom: 20px;">X√°c minh t√†i kho·∫£n c·ªßa b·∫°n</h2>
          <p style="color: #475569; font-size: 16px; line-height: 1.6; margin-bottom: 25px;">
            Ch√†o ${userName},<br>
            ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP b√™n d∆∞·ªõi:
          </p>
          
          <!-- OTP Code -->
          <div style="background-color: #f8fafc; border: 2px dashed #e2e8f0; border-radius: 8px; padding: 20px; margin: 25px 0;">
            <h1 style="color: #2563eb; font-size: 32px; font-weight: bold; margin: 0; letter-spacing: 8px;">${otp}</h1>
          </div>
          
          <p style="color: #ef4444; font-size: 14px; margin-top: 20px;">
            ‚ö†Ô∏è M√£ OTP n√†y s·∫Ω h·∫øt h·∫°n trong <strong>10 ph√∫t</strong>
          </p>
        </div>
        
        <!-- Security Warning -->
        <div style="background-color: #fef3c7; border-left: 4px solid #f59e0b; padding: 15px; margin: 20px 0; border-radius: 4px;">
          <h4 style="color: #92400e; margin: 0 0 10px 0;">üîí L∆∞u √Ω b·∫£o m·∫≠t:</h4>
          <ul style="color: #92400e; margin: 0; padding-left: 20px; font-size: 14px;">
            <li>Kh√¥ng chia s·∫ª m√£ OTP n√†y v·ªõi b·∫•t k·ª≥ ai</li>
            <li>VieVerse s·∫Ω kh√¥ng bao gi·ªù y√™u c·∫ßu m√£ OTP qua ƒëi·ªán tho·∫°i</li>
            <li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email</li>
          </ul>
        </div>
        
        <!-- Footer -->
        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e2e8f0;">
          <p style="color: #64748b; font-size: 14px; margin: 0;">
            C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng VieVerse!<br>
            ƒê·ªôi ng≈© ph√°t tri·ªÉn VieVerse
          </p>
          <p style="color: #94a3b8; font-size: 12px; margin: 10px 0 0 0;">
            ¬© 2025 VieVerse. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
          </p>
        </div>
      </div>
    </body>
    </html>
  `;
};

// H√†m g·ª≠i OTP v·ªõi error handling
export const sendOTP = async (to, otp, userName = null) => {
  try {
    const transporter = createTransporter();
    
    // Verify transporter tr∆∞·ªõc khi g·ª≠i
    await transporter.verify();
    
    const mailOptions = {
      from: `"VieVerse Support" <${process.env.MAIL_USER}>`,
      to,
      subject: 'üîê X√°c minh t√†i kho·∫£n VieVerse - M√£ OTP',
      html: getOTPEmailTemplate(otp, userName),
      // Th√™m text version cho email clients kh√¥ng h·ªó tr·ª£ HTML
      text: `
        X√°c minh t√†i kho·∫£n VieVerse
        
        Ch√†o ${userName || 'b·∫°n'},
        
        M√£ OTP x√°c minh c·ªßa b·∫°n l√†: ${otp}
        
        M√£ n√†y s·∫Ω h·∫øt h·∫°n trong 10 ph√∫t.
        
        Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.
        
        Tr√¢n tr·ªçng,
        ƒê·ªôi ng≈© VieVerse
      `
    };
    
    const info = await transporter.sendMail(mailOptions);
    
    console.log('OTP email sent successfully:', {
      messageId: info.messageId,
      to,
      timestamp: new Date().toISOString()
    });
    
    return {
      success: true,
      messageId: info.messageId
    };
    
  } catch (error) {
    console.error('Error sending OTP email:', error);
    
    // Throw custom error v·ªõi message r√µ r√†ng
    if (error.code === 'EAUTH') {
      throw new Error('Email authentication failed. Please check email credentials.');
    } else if (error.code === 'ECONNECTION') {
      throw new Error('Cannot connect to email server. Please try again later.');
    } else {
      throw new Error('Failed to send OTP email. Please try again.');
    }
  }
};

// H√†m g·ª≠i email ch√†o m·ª´ng sau khi verify th√†nh c√¥ng
export const sendWelcomeEmail = async (to, userName, userRole) => {
  try {
    const transporter = createTransporter();
    
    const welcomeTemplate = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi VieVerse</title>
      </head>
      <body style="font-family: Arial, sans-serif; background-color: #f4f4f4; margin: 0; padding: 20px;">
        <div style="max-width: 600px; margin: 0 auto; background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
          
          <div style="text-align: center; margin-bottom: 30px;">
            <h1 style="color: #2563eb; margin: 0; font-size: 28px;">üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi VieVerse!</h1>
          </div>
          
          <div style="margin-bottom: 30px;">
            <h2 style="color: #1e293b;">Ch√†o ${userName},</h2>
            <p style="color: #475569; font-size: 16px; line-height: 1.6;">
              C·∫£m ∆°n b·∫°n ƒë√£ x√°c minh th√†nh c√¥ng t√†i kho·∫£n ${userRole === 'student' ? 'sinh vi√™n' : 'c√¥ng ty'} tr√™n VieVerse!
            </p>
            <p style="color: #475569; font-size: 16px; line-height: 1.6;">
              B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:
            </p>
            <ul style="color: #475569; font-size: 16px; line-height: 1.6;">
              ${userRole === 'student' ? 
                `<li>T√¨m ki·∫øm v√† ·ª©ng tuy·ªÉn c√°c d·ª± √°n th√∫ v·ªã</li>
                <li>K·∫øt n·ªëi v·ªõi sinh vi√™n kh√°c</li>
                <li>X√¢y d·ª±ng h·ªì s∆° nƒÉng l·ª±c</li>` :
                `<li>ƒêƒÉng t·∫£i c√°c d·ª± √°n c·∫ßn tuy·ªÉn d·ª•ng</li>
                <li>T√¨m ki·∫øm nh√¢n t√†i sinh vi√™n</li>
                <li>Qu·∫£n l√Ω quy tr√¨nh tuy·ªÉn d·ª•ng</li>`
              }
            </ul>
          </div>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${process.env.FRONTEND_URL}/dashboard" style="background-color: #2563eb; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; font-weight: bold;">
              B·∫Øt ƒë·∫ßu kh√°m ph√° ‚Üí
            </a>
          </div>
          
          <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e2e8f0;">
            <p style="color: #64748b; font-size: 14px; margin: 0;">
              N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i!
            </p>
          </div>
        </div>
      </body>
      </html>
    `;
    
    await transporter.sendMail({
      from: `"VieVerse Team" <${process.env.MAIL_USER}>`,
      to,
      subject: 'üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi VieVerse!',
      html: welcomeTemplate
    });
    
    console.log('Welcome email sent successfully to:', to);
    
  } catch (error) {
    console.error('Error sending welcome email:', error);
    // Kh√¥ng throw error v√¨ welcome email kh√¥ng quan tr·ªçng b·∫±ng OTP
  }
};